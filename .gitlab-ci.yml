# SPDX-FileCopyrightText: 2019-2020 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

################################################################################
# Changes to this file requires approval from Labs. Please add a person from   #
# Labs as required approval to your MR if you have any changes.                #
################################################################################

# For pushing of release images to work, the following environment variables have
# to set in the Gitlab UI.
# RELEASE_REGISTRY_USER
# RELEASE_REGISTRY_PASSWORD
#
stages:
  - sync
  - lint
  - build
  - test
  - release
  - deploy

variables:
  # Project variables
  RELEASE_REGISTRY: docker.io
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/dipex

  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}

  IMAGE_DEV: ${RELEASE_REGISTRY_IMAGE}:dev
  IMAGE_RC: ${RELEASE_REGISTRY_IMAGE}:rc
  IMAGE_VERSION: ${RELEASE_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  IMAGE_LATEST: ${RELEASE_REGISTRY_IMAGE}:latest
  POETRY_VERSION: "1.3.1"

# Conditions
#############
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'

# Workflow
###########
workflow:
  rules:
    - <<: *if-tag
    - <<: *if-default-branch-refs
    - <<: *if-merge-request

include:
  - project: 'labs/salt-automation'
    file: '/gitlab-ci-templates/common/conventional-commits.v1.yml'
  - project: 'labs/salt-automation'
    file: '/gitlab-ci-templates/common/docker-build-meta.v1.yml'
  - project: 'labs/salt-automation'
    file: '/gitlab-ci-templates/common/docker-release.v1.yml'
  - project: "labs/salt-automation"
    file: "/gitlab-ci-templates/common/config-updater-meta.v1.yml"
  - project: "labs/salt-automation"
    file: "/gitlab-ci-templates/common/rules.v1.yml"
  - project: 'labs/salt-automation'
    file: "/gitlab-ci-templates/common/no-interrupt.v1.yml"
  - project: 'labs/salt-automation'
    file: "/gitlab-ci-templates/python/pypi-meta.v1.yml"
  - local: "integrations/SD_Lon/.gitlab-ci.yml"
  - local: "exporters/os2sync_export/.gitlab-ci.yml"
  - local: "exporters/sql_export/.gitlab-ci.yml"


.manual-rules: &manual-rules
  rules:
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
      when: manual
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
    - when: always

# Lint stage
############

.Lint Dockerfiles:
  stage: lint
  needs: []
  image: hadolint/hadolint:latest-debian
  before_script:
    - apt-get -y update
    - apt-get -y install --no-install-recommends git
  script:
    - git ls-files --exclude='Dockerfile*' --ignored | xargs --max-lines=1 hadolint
  tags:
    - docker


.lint-python:
  stage: lint
  needs: []
  image: python:3.10
  services: []
  before_script:
    - pip install -r integrations/requirements/lint.txt
  tags:
    - docker

Lint Customers files:
  extends: .lint-python
  script:
    - python -m black --diff --check customers/
    - python -m isort --profile black --diff --check-only customers/

Lint AD Integration:
  extends: .lint-python
  script:
    - cd integrations/ad_integration/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests types-freezegun types-python-dateutil
    - pre-commit run --files tests/*.py *.py

Lint Calculate Primary:
  extends: .lint-python
  script:
    - cd integrations/calculate_primary/
    - pip install mypy pre-commit types-requests
    - pre-commit run --files tests/*.py *.py

Lint RunDB Integration:
  extends: .lint-python
  script:
    - cd integrations/rundb/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests
    - pre-commit run --files tests/*.py *.py

Lint Opus Integration:
  extends: .lint-python
  script:
    - cd integrations/opus/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests
    - pre-commit run --files tests/*.py *.py

Lint Rollekatalog Exporter:
  extends: .lint-python
  script:
    - cd exporters/os2rollekatalog/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests
    - pre-commit run --files *.py

Lint CPR UUID Exporter:
  extends: .lint-python
  script:
    - cd exporters/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests
    - pre-commit run --files cpr_uuid.py

Lint OPUS Org Tree Print:
  extends: .lint-python
  script:
    - cd integrations/opus/org_tree_print/
    - python -m black --diff --check *.py
    - python -m isort --diff --check-only *.py

Lint AAK LOS Integration:
  extends: .lint-python
  script:
    - cd integrations/aarhus/
    - pip install mypy pre-commit types-python-dateutil
    - pre-commit run --files *.py

Lint FK-org uuid-import:
  extends: .lint-python
  script:
    - cd integrations/fkorg_it_systems/
    - pip install mypy pre-commit types-python-dateutil
    - pre-commit run --files *.py

Lint Reports:
  extends: .lint-python
  script:
    - python -m black --diff --check reports/query_actualstate.py reports/XLSXExporter.py reports/os2mo_tests/test_query_actualstate.py reports/os2mo_tests/test_XLSXExporter.py
    - python -m isort --profile black --check-only reports/query_actualstate.py reports/XLSXExporter.py reports/os2mo_tests/test_query_actualstate.py reports/os2mo_tests/test_XLSXExporter.py

Lint Exporter Utils:
  extends: .lint-python
  script:
    - python -m isort --profile black --diff --check-only exporters/utils/*.py exporters/utils/tests/*.py
    - cd exporters/utils/
    - python -m black --diff --check *.py tests/*.py

Lint Tools:
  extends: .lint-python
  script:
    - cd tools/
    - python -m black --diff --line-length 85 --check uuid_replace.py
    - python -m isort --diff --check-only uuid_replace.py
    - python -m black --diff --check data_fixers
    - python -m isort --profile black --diff --check-only --force-single-line-imports data_fixers

# Build stage
#############

Build TestImage:
  extends: .build-docker
  variables:
    DOCKERFILE: ${CI_PROJECT_DIR}/docker/Dockerfile

# Test stage
############

.test-python:
  stage: test
  needs: [ 'Build TestImage' ]
  image:
    name: ${IMAGE_SHA}
  services: [ ]
  tags:
    - docker
  variables:
    GIT_STRATEGY: none # We do not need the source code
    HYPOTHESIS_PROFILE: ci
  before_script:
    - cd /code


Test AD Integration:  # runs outside image (unfortunately)
  extends: .test-python
  script:
    - cd integrations/ad_integration/
    - pytest tests/

Test Calculate Primary:
  extends: .test-python
  script:
    - cd integrations/calculate_primary/
    - pytest tests/

Test CPR Mapper:
  extends: .test-python
  script:
    - python -m doctest -v integrations/cpr_mapper.py

Test OPUS Org Tree Print:
  extends: .test-python
  script:
    - python -m doctest -v integrations/opus/org_tree_print/main.py

Test OPUS importers:
  extends: .test-python
  script:
    - cp settings/kommune-andeby.json settings/settings.json
    - python -m pytest -v integrations/opus/tests

Test OPUS Helpers:
  extends: .test-python
  script:
    - cp settings/kommune-andeby.json settings/settings.json
    - python -m doctest -v integrations/opus/opus_helpers.py

Test OS2mo Data Import:
  extends: .test-python
  script:
    - cd os2mo_data_import/os2mo_data_import
    - pytest tests/

Test RunDB Integration:
  extends: .test-python
  script:
    - python integrations/rundb/db_overview.py --help
    - pytest integrations/rundb/tests/

Test AAK LOS Integration:
  extends: .test-python
  script:
    - cd integrations/aarhus
    - pip install -r ../requirements/test.txt
    - pytest tests/

Test FK-org uuid-import:
  extends: .test-python
  script:
    - pytest integrations/fkorg_it_systems/

Test Reports:
  extends: .test-python
  script:
    - pytest reports/os2mo_tests/ --ignore reports/os2mo_tests/test_viborg_managers.py

Test Exporter Utils:
  extends: .test-python
  script:
    - pytest exporters/utils/tests/

Test tools:
  extends: .test-python
  script:
    - python -m doctest -v tools/data_fixers/class_tools.py
    - pytest tools/tests/

Test rollekatalog:
  extends: .test-python
  script:
    - pip install -r exporters/os2rollekatalog/requirements.txt
    - pytest exporters/os2rollekatalog/tests/

Test plan2learn:
  extends: .test-python
  script:
    - cp settings/kommune-andeby.json settings/settings.json
    - pytest exporters/tests/test_plan2learn_export_job.py

Test SPSFTP:
  extends: .test-python
  script:
    - cd exporters/emus/spsftp
    - pytest tests

Test engagements Reports:
  extends: .test-python
  script:
    - pytest -vv reports/tests/test_reports_on_new_and_ended_engagements.py

# Release stage
###############

Release to Dev:
  extends: .release-to-dev
  needs: ["Release version"]
  variables:
    ENDPOINT: os2mo/flux/dipex/update-dev

Release to Test:
  extends: .release-to-test
  needs: []
  variables:
    ENDPOINT: os2mo/flux/dipex/update-test

Release to Prod:
  extends: .release-to-prod
  needs: []
  variables:
    ENDPOINT: os2mo/flux/dipex/update-prod

Release DIPEX to PyPI:
  variables:
    PYPI_TOKEN: ${DIPEX_PYPI_TOKEN}
  extends:
    - .release_to_pypi_cc

Release OS2mo-data-import to PyPI:
  variables:
    PYPI_TOKEN: ${OS2MO_DATA_IMPORT_PYPI_TOKEN}
  extends:
    - .release_to_pypi_cc
  before_script:
    - cd os2mo_data_import/

Release SDChangedAt to Flux dev:
  extends: .release-to-dev
  needs: ["Release version"]
  variables:
    ENDPOINT: os2mo/flux/sdchangedat/update-dev

Release SDChangedAt to Flux test:
  extends: .release-to-test
  needs: []
  variables:
    ENDPOINT: os2mo/flux/sdchangedat/update-test

Release SDChangedAt Flux prod:
  extends: .release-to-prod
  needs: []
  variables:
    ENDPOINT: os2mo/flux/sdchangedat/update-prod
