# SPDX-FileCopyrightText: 2019-2020 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

################################################################################
# Changes to this file requires approval from Labs. Please add a person from   #
# Labs as required approval to your MR if you have any changes.                #
################################################################################

# For pushing of release images to work, the following environment variables have
# to set in the Gitlab UI.
# RELEASE_REGISTRY_USER
# RELEASE_REGISTRY_PASSWORD
#
stages:
  - lint
  - build
  - test
  - release
  - deploy

variables:
  # Project variables
  RELEASE_REGISTRY: docker.io
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/dipex

  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}

  IMAGE_DEV: ${RELEASE_REGISTRY_IMAGE}:dev
  IMAGE_RC: ${RELEASE_REGISTRY_IMAGE}:rc
  IMAGE_VERSION: ${RELEASE_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  IMAGE_LATEST: ${RELEASE_REGISTRY_IMAGE}:latest

include:
  - project: 'labs/salt-automation'
    ref: 'master'
    file: '/gitlab-ci-templates/common/autopub.v1.yml'
  - project: 'labs/salt-automation'
    ref: 'master'
    file: '/gitlab-ci-templates/common/docker-release.v1.yml'

# Only run pipeline when pushing a tag or a branch.
# This is a workaround for a bug causing detached pipelines on MRs
# See: https://gitlab.com/gitlab-org/gitlab/-/issues/34756
#      https://docs.gitlab.com/ee/ci/yaml/#workflowrules-templates
workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

.manual-rules: &manual-rules
  rules:
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
      when: manual
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
    - when: always

# Lint stage
############

.Lint Dockerfiles:
  stage: lint
  needs: []
  image: hadolint/hadolint:latest-debian
  before_script:
    - apt-get -y update
    - apt-get -y install --no-install-recommends git
  script:
    - git ls-files --exclude='Dockerfile*' --ignored | xargs --max-lines=1 hadolint
  tags:
    - docker


.lint-python:
  stage: lint
  needs: []
  image: python:3
  services: []
  before_script:
    - pip install -r integrations/requirements/lint.txt
  tags:
    - docker

Lint Customers files:
  extends: .lint-python
  script:
    - python -m black --diff --check customers/
    - python -m isort --profile black --diff --check-only customers/

Lint LoraCache Integration:
  extends: .lint-python
  script:
    - pip install mypy pre-commit types-Jinja2 types-click types-requests types-python-dateutil
    - pre-commit run --files exporters/sql_export/tests/*.py exporters/sql_export/sql_table_defs.py exporters/sql_export/sql_url.py exporters/sql_export/lc_for_jobs_db.py

Lint AD Integration:
  extends: .lint-python
  script:
    - cd integrations/ad_integration/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests types-freezegun
    - pre-commit run --files tests/*.py *.py

Lint Calculate Primary:
  extends: .lint-python
  script:
    - cd integrations/calculate_primary/
    - pip install mypy pre-commit types-requests
    - pre-commit run --files tests/*.py *.py

Lint SDLoen Integration:
  extends: .lint-python
  script:
    - cd integrations/SD_Lon/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests
    - pre-commit run --files tests/*.py *.py

Lint RunDB Integration:
  extends: .lint-python
  script:
    - cd integrations/rundb/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests
    - pre-commit run --files tests/*.py *.py

Lint Rollekatalog Exporter:
  extends: .lint-python
  script:
    - cd exporters/os2rollekatalog/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests
    - pre-commit run --files *.py

Lint CPR UUID Exporter:
  extends: .lint-python
  script:
    - cd exporters/
    - pip install mypy pre-commit types-Jinja2 types-click types-requests
    - pre-commit run --files cpr_uuid.py

Lint OPUS Org Tree Print:
  extends: .lint-python
  script:
    - cd integrations/opus/org_tree_print/
    - python -m black --diff --check *.py
    - python -m isort --diff --check-only *.py

Lint AAK LOS Integration:
  extends: .lint-python
  script:
    - cd integrations/aarhus/
    - pip install mypy pre-commit types-python-dateutil
    - pre-commit run --files *.py

Lint Reports:
  extends: .lint-python
  script:
    - python -m black --diff --check reports/query_actualstate.py reports/XLSXExporter.py reports/os2mo_tests/test_query_actualstate.py reports/os2mo_tests/test_XLSXExporter.py
    - python -m isort --profile black --check-only reports/query_actualstate.py reports/XLSXExporter.py reports/os2mo_tests/test_query_actualstate.py reports/os2mo_tests/test_XLSXExporter.py

Lint Exporter Utils:
  extends: .lint-python
  script:
    - python -m isort --profile black --diff --check-only exporters/utils/*.py exporters/utils/tests/*.py
    - cd exporters/utils/
    - python -m black --diff --check *.py tests/*.py

Lint Tools:
  extends: .lint-python
  script:
    - cd tools/
    - python -m black --diff --line-length 85 --check uuid_replace.py
    - python -m isort --diff --check-only uuid_replace.py
    - python -m black --diff --check data_fixers
    - python -m isort --profile black --diff --check-only --force-single-line-imports data_fixers

# Build stage
#############

Build TestImage:
  stage: build
  needs: []
  image:
    # We use kaniko v0.16.0 as both v0.17.0, v0.17.1, v0.18.0 and v0.19.0 contains fatal bugs.
    name: gcr.io/kaniko-project/executor:debug-v0.16.0
    entrypoint: [""]
  tags:
    - docker
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/Dockerfile
      --destination=${IMAGE_SHA}

# Test stage
############

.test-python:
  stage: test
  needs: [ 'Build TestImage' ]
  image:
    name: ${IMAGE_SHA}
  services: [ ]
  tags:
    - docker
  variables:
    GIT_STRATEGY: none # We do not need the source code
    HYPOTHESIS_PROFILE: ci
  before_script:
    - cd /code


Test LoraCache Exporter:
  extends: .test-python
  script:
    - pytest exporters/sql_export/tests/

Test AD Integration:  # runs outside image (unfortunately)
  extends: .test-python
  script:
    - cd integrations/ad_integration/
    - pytest tests/

Test Calculate Primary:
  extends: .test-python
  script:
    - cd integrations/calculate_primary/
    - pytest tests/


Test OS2Sync Integration:
  extends: .test-python
  variables:
    CUSTOMER_SETTINGS: /code/settings/kommune-andeby.json
  script:
    - pytest integrations/os2sync/tests

Test CPR Mapper:
  extends: .test-python
  script:
    - python -m doctest -v integrations/cpr_mapper.py

Test OPUS Org Tree Print:
  extends: .test-python
  script:
    - python -m doctest -v integrations/opus/org_tree_print/main.py

Test OPUS importers:
  extends: .test-python
  script:
    - cp settings/kommune-andeby.json settings/settings.json
    - python -m pytest -v integrations/opus/tests

Test OPUS Helpers:
  extends: .test-python
  script:
    - cp settings/kommune-andeby.json settings/settings.json
    - python -m doctest -v integrations/opus/opus_helpers.py

Test SDLoen Integration:
  extends: .test-python
  script:
    - python integrations/SD_Lon/sd_cli.py --help
    - pytest integrations/SD_Lon/tests/

Test RunDB Integration:
  extends: .test-python
  script:
    - python integrations/rundb/db_overview.py --help
    - pytest integrations/rundb/tests/

Test AAK LOS Integration:
  extends: .test-python
  script:
    - cd integrations/aarhus
    - pip install -r ../requirements/test.txt
    - pytest tests/

Test Reports:
  extends: .test-python
  script:
    - pytest reports/os2mo_tests/ --ignore reports/os2mo_tests/test_viborg_managers.py

Test Exporter Utils:
  extends: .test-python
  script:
    - pytest exporters/utils/tests/

Test tools:
  extends: .test-python
  script:
    - python -m doctest -v tools/data_fixers/class_tools.py
    - pytest tools/tests/

Test rollekatalog:
  extends: .test-python
  script:
    - pip install -r exporters/os2rollekatalog/requirements.txt
    - pytest exporters/os2rollekatalog/tests/


# Release stage
###############

Release to Dev:
  stage: deploy
  needs: ["Release version"]
  image: alpine
  variables:
    GIT_STRATEGY: none # We do not need the source code
  rules:
    # Matches <version core> from SemVer 2.0.0 BNF grammar. Ex. 2.3.4, but not 2.3.4-rc
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
  tags:
    - docker
  script:
    - apk add git
    - wget https://github.com/mikefarah/yq/releases/download/v4.12.1/yq_linux_amd64 -O /usr/bin/yq
    - chmod +x /usr/bin/yq
    - git config --global user.email "labs@magenta-aps.dk"
    - git config --global user.name "OS2MO Config Updater"
    - git clone https://$DEPLOY_USER:$ACCESS_TOKEN@git.magenta.dk/labs/salt-automation.git
    - cd salt-automation
    - yq e -i '.spec.values.dipex.image.tag = strenv(CI_COMMIT_TAG)' flux/projects/os2mo/config/dev.yaml
    - git add flux/projects/os2mo/config/dev.yaml
    - git commit -m "[cd] Deploy DIPEX $CI_COMMIT_TAG to flux dev servers"
    - git push

Release to Test:
  stage: deploy
  needs: []
  image: alpine
  variables:
    GIT_STRATEGY: none # We do not need the source code
  rules:
    # Only run these on scheduled jobs
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE == "release_to_test"
      when: on_success
    - when: never
  tags:
    - docker
  script:
    - apk add git
    - wget https://github.com/mikefarah/yq/releases/download/v4.12.1/yq_linux_amd64 -O /usr/bin/yq
    - chmod +x /usr/bin/yq
    - git config --global user.email "labs@magenta-aps.dk"
    - git config --global user.name "OS2MO Config Updater"
    - git clone https://$DEPLOY_USER:$ACCESS_TOKEN@git.magenta.dk/labs/salt-automation.git
    - cd salt-automation
    - export DEV_VERSION=$(yq e '.spec.values.dipex.image.tag' flux/projects/os2mo/config/dev.yaml)
    - yq e -i '.spec.values.dipex.image.tag = strenv(DEV_VERSION)' flux/projects/os2mo/config/test.yaml
    - git add flux/projects/os2mo/config/test.yaml
    - git commit -m "[cd] Deploy DIPEX $DEV_VERSION to flux test servers"
    - git push

Release to Prod:
  stage: deploy
  needs: []
  image: alpine
  variables:
    GIT_STRATEGY: none # We do not need the source code
  rules:
    # Only run these on scheduled jobs
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE == "release_to_prod"
      when: on_success
    - when: never
  tags:
    - docker
  script:
    - apk add git
    - wget https://github.com/mikefarah/yq/releases/download/v4.12.1/yq_linux_amd64 -O /usr/bin/yq
    - chmod +x /usr/bin/yq
    - git config --global user.email "labs@magenta-aps.dk"
    - git config --global user.name "OS2MO Config Updater"
    - git clone https://$DEPLOY_USER:$ACCESS_TOKEN@git.magenta.dk/labs/salt-automation.git
    - cd salt-automation
    - export TEST_VERSION=$(yq e '.spec.values.dipex.image.tag' flux/projects/os2mo/config/test.yaml)
    - yq e -i '.spec.values.dipex.image.tag = strenv(TEST_VERSION)' flux/projects/os2mo/config/prod.yaml
    - git add flux/projects/os2mo/config/prod.yaml
    - git commit -m "[cd] Deploy DIPEX $TEST_VERSION to flux prod servers"
    - git push
