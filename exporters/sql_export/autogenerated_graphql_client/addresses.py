# Generated by ariadne-codegen on 2024-05-16 09:14
# Source: queries.graphql
from datetime import datetime
from typing import Any
from typing import List
from typing import Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class Addresses(BaseModel):
    engagements: "AddressesEngagements"


class AddressesEngagements(BaseModel):
    objects: List["AddressesEngagementsObjects"]
    page_info: "AddressesEngagementsPageInfo"


class AddressesEngagementsObjects(BaseModel):
    validities: List["AddressesEngagementsObjectsValidities"]


class AddressesEngagementsObjectsValidities(BaseModel):
    engagement_type: "AddressesEngagementsObjectsValiditiesEngagementType"
    org_unit: List["AddressesEngagementsObjectsValiditiesOrgUnit"]
    person: List["AddressesEngagementsObjectsValiditiesPerson"]
    user_key: str
    uuid: UUID
    validity: "AddressesEngagementsObjectsValiditiesValidity"
    extension_1: Optional[str]
    extension_10: Optional[str]
    extension_2: Optional[str]
    extension_3: Optional[str]
    extension_4: Optional[str]
    extension_5: Optional[str]
    extension_6: Optional[str]
    extension_7: Optional[str]
    extension_8: Optional[str]
    extension_9: Optional[str]
    is_primary: bool
    job_function: "AddressesEngagementsObjectsValiditiesJobFunction"
    fraction: Optional[int]
    primary: Optional["AddressesEngagementsObjectsValiditiesPrimary"]


class AddressesEngagementsObjectsValiditiesEngagementType(BaseModel):
    name: str
    uuid: UUID
    user_key: str


class AddressesEngagementsObjectsValiditiesOrgUnit(BaseModel):
    uuid: UUID


class AddressesEngagementsObjectsValiditiesPerson(BaseModel):
    uuid: UUID


class AddressesEngagementsObjectsValiditiesValidity(BaseModel):
    from_: datetime = Field(alias="from")
    to: Optional[datetime]


class AddressesEngagementsObjectsValiditiesJobFunction(BaseModel):
    uuid: UUID
    user_key: str
    name: str


class AddressesEngagementsObjectsValiditiesPrimary(BaseModel):
    uuid: UUID
    name: str


class AddressesEngagementsPageInfo(BaseModel):
    next_cursor: Optional[Any]


Addresses.update_forward_refs()
AddressesEngagements.update_forward_refs()
AddressesEngagementsObjects.update_forward_refs()
AddressesEngagementsObjectsValidities.update_forward_refs()
AddressesEngagementsObjectsValiditiesEngagementType.update_forward_refs()
AddressesEngagementsObjectsValiditiesOrgUnit.update_forward_refs()
AddressesEngagementsObjectsValiditiesPerson.update_forward_refs()
AddressesEngagementsObjectsValiditiesValidity.update_forward_refs()
AddressesEngagementsObjectsValiditiesJobFunction.update_forward_refs()
AddressesEngagementsObjectsValiditiesPrimary.update_forward_refs()
AddressesEngagementsPageInfo.update_forward_refs()
