# Generated by ariadne-codegen on 2024-05-16 09:20
# Source: queries.graphql
from datetime import datetime
from typing import Any
from typing import List
from typing import Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class QueryEngagements(BaseModel):
    engagements: "QueryEngagementsEngagements"


class QueryEngagementsEngagements(BaseModel):
    objects: List["QueryEngagementsEngagementsObjects"]
    page_info: "QueryEngagementsEngagementsPageInfo"


class QueryEngagementsEngagementsObjects(BaseModel):
    validities: List["QueryEngagementsEngagementsObjectsValidities"]


class QueryEngagementsEngagementsObjectsValidities(BaseModel):
    engagement_type: "QueryEngagementsEngagementsObjectsValiditiesEngagementType"
    org_unit: List["QueryEngagementsEngagementsObjectsValiditiesOrgUnit"]
    person: List["QueryEngagementsEngagementsObjectsValiditiesPerson"]
    user_key: str
    uuid: UUID
    validity: "QueryEngagementsEngagementsObjectsValiditiesValidity"
    extension_1: Optional[str]
    extension_10: Optional[str]
    extension_2: Optional[str]
    extension_3: Optional[str]
    extension_4: Optional[str]
    extension_5: Optional[str]
    extension_6: Optional[str]
    extension_7: Optional[str]
    extension_8: Optional[str]
    extension_9: Optional[str]
    is_primary: bool
    job_function: "QueryEngagementsEngagementsObjectsValiditiesJobFunction"
    fraction: Optional[int]
    primary: Optional["QueryEngagementsEngagementsObjectsValiditiesPrimary"]


class QueryEngagementsEngagementsObjectsValiditiesEngagementType(BaseModel):
    name: str
    uuid: UUID
    user_key: str


class QueryEngagementsEngagementsObjectsValiditiesOrgUnit(BaseModel):
    uuid: UUID


class QueryEngagementsEngagementsObjectsValiditiesPerson(BaseModel):
    uuid: UUID


class QueryEngagementsEngagementsObjectsValiditiesValidity(BaseModel):
    from_: datetime = Field(alias="from")
    to: Optional[datetime]


class QueryEngagementsEngagementsObjectsValiditiesJobFunction(BaseModel):
    uuid: UUID
    user_key: str
    name: str


class QueryEngagementsEngagementsObjectsValiditiesPrimary(BaseModel):
    uuid: UUID
    name: str


class QueryEngagementsEngagementsPageInfo(BaseModel):
    next_cursor: Optional[Any]


QueryEngagements.update_forward_refs()
QueryEngagementsEngagements.update_forward_refs()
QueryEngagementsEngagementsObjects.update_forward_refs()
QueryEngagementsEngagementsObjectsValidities.update_forward_refs()
QueryEngagementsEngagementsObjectsValiditiesEngagementType.update_forward_refs()
QueryEngagementsEngagementsObjectsValiditiesOrgUnit.update_forward_refs()
QueryEngagementsEngagementsObjectsValiditiesPerson.update_forward_refs()
QueryEngagementsEngagementsObjectsValiditiesValidity.update_forward_refs()
QueryEngagementsEngagementsObjectsValiditiesJobFunction.update_forward_refs()
QueryEngagementsEngagementsObjectsValiditiesPrimary.update_forward_refs()
QueryEngagementsEngagementsPageInfo.update_forward_refs()
